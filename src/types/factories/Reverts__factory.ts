/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Reverts, RevertsInterface } from "../Reverts";

const _abi = [
  {
    inputs: [],
    name: "CustomError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressArg",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "uintArg",
        type: "uint256",
      },
    ],
    name: "CustomErrorWithArgs",
    type: "error",
  },
  {
    inputs: [],
    name: "requireWithMessage",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "requireWithoutMessage",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "revertWithCustomError",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "revertWithCustomErrorWithArgs",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "revertWithMessage",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "revertWithoutMessage",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061017f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063594c929711610050578063594c929714610091578063c06a97cb14610099578063ea86fc081461009957600080fd5b8063185c38a4146100775780633448f6891461008157806346fc4bb114610089575b600080fd5b61007f6100a1565b005b61007f6100ee565b61007f610111565b61007f61012a565b61007f600080fd5b60405162461bcd60e51b815260206004820152601a60248201527f526576657274733a20726576657274576974684d65737361676500000000000060448201526064015b60405180910390fd5b60405163beb6964760e01b815233600482018190523160248201526044016100e5565b6040516309caebf360e01b815260040160405180910390fd5b60405162461bcd60e51b815260206004820152601b60248201527f526576657274733a2072657175697265576974684d657373616765000000000060448201526064016100e556fea164736f6c6343000809000a";

type RevertsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RevertsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Reverts__factory extends ContractFactory {
  constructor(...args: RevertsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Reverts";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Reverts> {
    return super.deploy(overrides || {}) as Promise<Reverts>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Reverts {
    return super.attach(address) as Reverts;
  }
  connect(signer: Signer): Reverts__factory {
    return super.connect(signer) as Reverts__factory;
  }
  static readonly contractName: "Reverts";
  public readonly contractName: "Reverts";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevertsInterface {
    return new utils.Interface(_abi) as RevertsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Reverts {
    return new Contract(address, _abi, signerOrProvider) as Reverts;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "GreeterError",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientGreetings",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "GreetingsSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "GreetingsWithdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "greeting_",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "greeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "greetings",
    outputs: [
      {
        internalType: "uint256",
        name: "greetingsSent_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "greetingsSent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "sendGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "throwError",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000a2238038062000a2283398101604081905262000034916200010d565b80516200004990600090602084019062000051565b505062000226565b8280546200005f90620001e9565b90600052602060002090601f016020900481019282620000835760008555620000ce565b82601f106200009e57805160ff1916838001178555620000ce565b82800160010185558215620000ce579182015b82811115620000ce578251825591602001919060010190620000b1565b50620000dc929150620000e0565b5090565b5b80821115620000dc5760008155600101620000e1565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200012157600080fd5b82516001600160401b03808211156200013957600080fd5b818501915085601f8301126200014e57600080fd5b815181811115620001635762000163620000f7565b604051601f8201601f19908116603f011681019083821181831017156200018e576200018e620000f7565b816040528281528886848701011115620001a757600080fd5b600093505b82841015620001cb5784840186015181850187015292850192620001ac565b82841115620001dd5760008684830101525b98975050505050505050565b600181811c90821680620001fe57607f821691505b602082108114156200022057634e487b7160e01b600052602260045260246000fd5b50919050565b6107ec80620002366000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a41368621161005b578063a413686214610121578063cfae321714610134578063ef690cc014610149578063fa86ccc71461015157600080fd5b80632f7643a81461008d5780633703ed571461009757806394bd77da146100aa5780639c1b4448146100e8575b600080fd5b610095610164565b005b6100956100a53660046105b5565b61017d565b6100d56100b83660046105e1565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6100d56100f63660046105e1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61009561012f366004610630565b6102c8565b61013c6102df565b6040516100df91906106e1565b61013c610371565b61009561015f3660046105b5565b6103ff565b60405163c8508fc360e01b815260040160405180910390fd5b3360009081526001602090815260408083206001600160a01b03861684529091529020548111156101c1576040516349752c8760e01b815260040160405180910390fd5b3360009081526001602090815260408083206001600160a01b0386168452909152812080548392906101f490849061074c565b909155505060405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b15801561024157600080fd5b505af1158015610255573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102799190610763565b50604080513381526001600160a01b03841660208201529081018290527f6ac5432f2eb9c371a50ac18628c45fcf31feaf327ff7a7612f7129cbb04af7cb906060015b60405180910390a15050565b80516102db906000906020840190610504565b5050565b6060600080546102ee9061078c565b80601f016020809104026020016040519081016040528092919081815260200182805461031a9061078c565b80156103675780601f1061033c57610100808354040283529160200191610367565b820191906000526020600020905b81548152906001019060200180831161034a57829003601f168201915b5050505050905090565b6000805461037e9061078c565b80601f01602080910402602001604051908101604052809291908181526020018280546103aa9061078c565b80156103f75780601f106103cc576101008083540402835291602001916103f7565b820191906000526020600020905b8154815290600101906020018083116103da57829003601f168201915b505050505081565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd90606401602060405180830381600087803b15801561044d57600080fd5b505af1158015610461573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104859190610763565b503360009081526001602090815260408083206001600160a01b0386168452909152812080548392906104b99084906107c7565b9091555050604080513381526001600160a01b03841660208201529081018290527f3f4b14a5486287bb98c5ee043f0b5f1e4d6f054b8d725cdcb14c607e7e5eefae906060016102bc565b8280546105109061078c565b90600052602060002090601f0160209004810192826105325760008555610578565b82601f1061054b57805160ff1916838001178555610578565b82800160010185558215610578579182015b8281111561057857825182559160200191906001019061055d565b50610584929150610588565b5090565b5b808211156105845760008155600101610589565b6001600160a01b03811681146105b257600080fd5b50565b600080604083850312156105c857600080fd5b82356105d38161059d565b946020939093013593505050565b600080604083850312156105f457600080fd5b82356105ff8161059d565b9150602083013561060f8161059d565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561064257600080fd5b813567ffffffffffffffff8082111561065a57600080fd5b818401915084601f83011261066e57600080fd5b8135818111156106805761068061061a565b604051601f8201601f19908116603f011681019083821181831017156106a8576106a861061a565b816040528281528760208487010111156106c157600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b8181101561070e578581018301518582016040015282016106f2565b81811115610720576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561075e5761075e610736565b500390565b60006020828403121561077557600080fd5b8151801515811461078557600080fd5b9392505050565b600181811c908216806107a057607f821691505b602082108114156107c157634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156107da576107da610736565b50019056fea164736f6c6343000809000a";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Greeter";
  }

  deploy(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly contractName: "Greeter";
  public readonly contractName: "Greeter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
